!function(e){var t={};function r(n){if(t[n])return t[n].exports;var a=t[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)r.d(n,a,function(t){return e[t]}.bind(null,a));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);let n=-1;const a=(e,t)=>{const r=e.map(i);return s(r,t)},o=e=>[...e,...e],s=(e,t)=>{const{row:r,column:a}=t,o=Array.from(new Array(r)),s=Array.from(new Array(a));return o.map(e=>s).map(t=>t.map(t=>e[(()=>n+=1)()]))},c=(e,t)=>t.flat().filter(t=>e.card===t.card).some(e=>!0===e.isOpen),i=e=>({card:e,isOpen:!1,hasMatched:!1}),d=e=>e.board.map((e,t)=>e.map((e,r)=>`<div\n          class="spot ${e.isOpen?"is-open":"is-closed"}"\n          data-position="${t}, ${r}"\n          data-is-open="${e.isOpen}"\n        >${e.card}</div>`)).flat().join("");window.MEMORI={state:((e,t)=>{const r=o(e);return{board:a(r,t),isGameOver:!1}})(["🍗","⚡️"],{row:2,column:2})};const l=document.querySelector("#app"),p=document.querySelector("#canvas"),u=document.querySelector("#play"),f=e=>{(e=>{window.MEMORI.state=e})(e);const t=(e=>`<div class="board">${d(e)}</div>`)(e);p.innerHTML=t,l.classList.add("is-playing"),y()},m=()=>{f(window.MEMORI.state)},y=()=>{const e=app.querySelectorAll(".spot");Array.from(e).forEach(e=>{const t=e.getAttribute("data-position").replace(/\s/,"").split(","),r=t[0],n=t[1];e.addEventListener("click",e=>{const t=((e,t)=>{switch(t.type){case"PLAY":const{row:r,column:n}=t.payload;let a=e.board.slice().map((e,t)=>e.map((e,a)=>r===t&&n===a?{...e,isOpen:!0}:e));const o=Object.assign({},a[r][n]),s=c(o,e.board),i=e.board.flat().filter(e=>e.isOpen),d=e.board.flat().filter(e=>e.hasMatched);return a=s?a.map(e=>e.map(e=>e.card===o.card?{...e,hasMatched:!0}:e)):a.map(e=>e.map(e=>e.isOpen&&!e.hasMatched&&i.length>d?{...e,isOpen:!1}:e)),{...e,board:[...a],isGameOver:a.flat().every(e=>e.hasMatched)};default:return e}})(window.MEMORI.state,{type:"PLAY",payload:{row:parseInt(r,10),column:parseInt(n,10)}});f(t)})})};u.addEventListener("click",m,!1)}]);